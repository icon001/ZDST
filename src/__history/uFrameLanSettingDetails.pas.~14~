unit uFrameLanSettingDetails;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants, 
  FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,
  FMX.Controls.Presentation, FMX.Objects, FMX.Edit, FMX.EditBox, FMX.SpinBox,
  FMX.Layouts, System.Rtti, FMX.Grid.Style, FMX.ScrollBox, FMX.Grid;

type
  TFrameLanSettingDetails = class(TFrame)
    Rectangle1: TRectangle;
    GridPanelLayout1: TGridPanelLayout;
    txtHeader: TText;
    ScrollBox1: TScrollBox;
    FlowLayout1: TFlowLayout;
    rectConnectSetting: TRectangle;
    gbCallTime: TGroupBox;
    Rectangle18: TRectangle;
    Text17: TText;
    Rectangle2: TRectangle;
    rdLan: TRadioButton;
    rdRs232: TRadioButton;
    rectRs232DeviceType: TRectangle;
    RadioButton1: TRadioButton;
    RadioButton2: TRadioButton;
    rectLanConnect: TRectangle;
    GroupBox1: TGroupBox;
    Rectangle4: TRectangle;
    CornerButton1: TCornerButton;
    Rectangle3: TRectangle;
    Rectangle5: TRectangle;
    StringGrid1: TStringGrid;
    Rectangle6: TRectangle;
    Rectangle7: TRectangle;
    Text1: TText;
    Edit1: TEdit;
    Text2: TText;
    Edit2: TEdit;
    procedure StringGrid1DrawColumnCell(Sender: TObject; const Canvas: TCanvas;
      const Column: TColumn; const Bounds: TRectF; const Row: Integer;
      const Value: TValue; const State: TGridDrawStates);
  private
    { Private declarations }
  public
    { Public declarations }
    procedure FormInitiailize;
  end;

implementation

{$R *.fmx}

{ TFrameLanSettingDetails }

procedure TFrameLanSettingDetails.FormInitiailize;
var
  I: Integer;
  Column: TColumn;
begin
  StringGrid1.RowCount := 10;

  for I := 0 to StringGrid1.RowCount - 1 do
  begin
    Column := TStringColumn.Create(Self);
    Column.Header := 'Test' + inttostr(i);
    Column.Width := 100 + i * 10;
    Column.Parent := StringGrid1;
  end;
end;

procedure TFrameLanSettingDetails.StringGrid1DrawColumnCell(Sender: TObject;
  const Canvas: TCanvas; const Column: TColumn; const Bounds: TRectF;
  const Row: Integer; const Value: TValue; const State: TGridDrawStates);
begin
  if Column is TStringColumn then
  begin
    Canvas.Fill.Color := TAlphaColorRec.Lightblue; // 배경 색상 변경
    Canvas.FillText(Bounds, Value.ToString, False, 1, [], TTextAlign.Leading, TTextAlign.Center); // 텍스트 색상 변경
  end;
end;

end.
