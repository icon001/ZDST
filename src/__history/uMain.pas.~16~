unit uMain;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Buttons, Vcl.StdCtrls, AdvEdit,
  AdvSmoothLabel,IniFiles, Vcl.ExtCtrls;

type
  TfmMain = class(TForm)
    Panel1: TPanel;
    AdvSmoothLabel2: TAdvSmoothLabel;
    ed_userpw: TAdvEdit;
    SpeedButton1: TSpeedButton;
    SpeedButton2: TSpeedButton;
    procedure SpeedButton2Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
    //initialzie
    procedure iniConfigSetting;
  public
    { Public declarations }
  end;

var
  fmMain: TfmMain;

implementation

uses
  uComonVariable,
  uDataBase;

{$R *.dfm}

procedure TfmMain.FormCreate(Sender: TObject);
begin
  iniConfigSetting;

  TdmDatabase.GetObject.DatabaseCreate;
end;

procedure TfmMain.iniConfigSetting;
var
  ini_fun : TiniFile;
begin

  Try
    ini_fun := TiniFile.Create(ExtractFileDir(Application.ExeName) + '\Config.INI');
    G_stPw := ini_fun.ReadString('Config','PW','1234');

    G_nDelayTime := ini_fun.ReadInteger('Config','DelayTime',2000);

    G_stTCPConf := ini_fun.ReadString('Config','TCP','127.0.0.1,3000,0');
    G_nComPort := ini_fun.ReadInteger('Config','ComPort',0);
    G_nConnectMode := ini_fun.ReadInteger('Config','ConnectMode',0);
    G_nLoopCount := ini_fun.ReadInteger('Config','LoopCount',3)  ; //에러 대기 횟수
    G_nLANTime := ini_fun.ReadInteger('Config','LANTime',4000);
    G_nLANLoop := ini_fun.ReadInteger('Config','LANLoop',2);
    G_nLangType := ini_fun.ReadInteger('Config','LangType',1);

    if ini_fun.ReadInteger('Config','Intercept',0) = 1 then G_bIntercept := True
    else G_bIntercept := False;

    G_bDeviceSearch := True;
    if UpperCase(ini_fun.ReadString('Config','MACVIEW','FALSE')) = 'FALSE' then  G_bMacView := False
    else G_bMacView := True;

    if UpperCase(ini_fun.ReadString('Config','EventControlerSave','FALSE')) = 'FALSE' then  G_bEventControlerSave := False
    else G_bEventControlerSave := True;
    G_stExeFolder := ExtractFileDir(Application.ExeName);
    G_stLogDirectory := ExtractFileDir(Application.ExeName) + '\log';
  Finally
    ini_fun.free;
  End;
end;

procedure TfmMain.SpeedButton2Click(Sender: TObject);
begin
  Close;
end;

end.
